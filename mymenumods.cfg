#####################################################################
# 	LCD Menu Override
#####################################################################

### My custom Menu Structure ###
# Main
#   + Tune						#  enabled if printing
#       + Speed: 000%
#       + Flow: 000%
#       + Offset Z:00.00		#  steps +-2.5um
#   + Control
#       + Home All
#       + G32
#       + Steppers off
#       + Fan: OFF
#       + Fan speed: 000%
#       + Move 10mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 0.1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#   + Temperature
#       + Ex0:000 (0000)
#       + Bed:000 (0000)
#       + Preheat PLA
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Preheat ABS
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Cooldown
#           + Cooldown all
#           + Cooldown hotend
#           + Cooldown hotbed
#   + Filament
#       + Ex0:000 (0000)
#       + Load Fil. fast
#       + Load Fil. slow
#       + Unload Fil.fast
#       + Unload Fil.slow
#       + Feed: 000.0
#   + Setup
#       + Save config
#       + Restart
#           + Restart host
#           + Restart FW
#       + PID tuning
#           + Tune Hotend PID
#           + Tune Hotbed PID
#       + Calibration
#           + Delta cal. auto
#           + Delta cal. man
#               + Start probing
#               + Move Z: 000.00
#               + Test Z: ++
#               + Accept
#               + Abort
#           + Bed probe
#       + Dump parameters

## ----------- Removing below items ----------------------------

[menu __main __control __home]
type: command
enable: false
name: Home All
gcode: G28

[menu __main __control __homez]
type: command
enable: false
name: Home Z
gcode: G28 Z

[menu __main __control __homexy]
type: command
enable: false
name: Home X/Y
gcode: G28 X Y

[menu __main __control __belt_tensioning_position]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Belts ten pos
gcode: BELT_TENSION_POSITION

[menu __main __control __test_resonance_x]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Test res. X
gcode: TEST_RESONANCES AXIS=X

[menu __main __control __test_resonance_y]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Test res. Y
gcode: TEST_RESONANCES AXIS=Y

[menu __main __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -2
input_max: 2
input_step: 0.0025
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __main __octoprint]
type: list
name: OctoPrint
enable: false

[menu __main __sdcard]
type: vsdlist
enable: false
name: SD Card

[menu __main __control __caselightonoff]
type: input
enable: false
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: false
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

[menu __main __control __fanonoff]
type: input
enable: false
name: Fan: {'ON ' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

[menu __main __setup __calib __delta_calib_auto]
type: command
enable: false
name: Delta cal. auto
gcode:
    G28
    DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type: list
enable: false
name: Delta cal. man

[menu __main __filament]
type: list
enable: false
name: Filament

[menu __main __setup __calib __bedprobe]
type: command
enable: false
name: Bed Mesh
gcode:
	BED_MESH_CALIBRATE

## --------- Adding below items -------------------------

[menu __main __control __g32]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: G32
gcode: G32

[menu __main __myfilament]
type: list
name: Filament

[menu __main __myfilament __purge]
type: command
name: Purge Fil.
index: 1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    PURGE_FILAMENT
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __myfilament __load]
type: command
name: Unload Fil.
index: 0
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __Nozzlelights]
type: list
enable: false
name: Nozzle Lights

[menu __main __Nozzlelights __NozzlePresetOff]
type: command
enable: false
name: All OFF
gcode:
	off_nozzle
	
[menu __main __Nozzlelights __NozzlePresetRed]
type: command
enable: false
name: Preset Red
gcode:
	red_nozzle
	
[menu __main __Nozzlelights __NozzlePresetGreen]
type: command
enable: false
name: Preset Green
gcode:
	green_nozzle
	
[menu __main __Nozzlelights __NozzlePresetBlue]
type: command
enable: false
name: Preset Blue
gcode:
	blue_nozzle

[menu __main __Nozzlelights __NozzlePresetPurple]
type: command
enable: false
name: Preset Purple
gcode:
	purple_nozzle

[menu __main __Nozzlelights __red]
type: input
enable: false
realtime: true
name: Red: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro nozzle_lights"].red}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=nozzle_lights VARIABLE=red VALUE={menu.input}
	NOZZLE_LIGHTS red={menu.input} green={printer["gcode_macro nozzle_lights"].green} blue={printer["gcode_macro nozzle_lights"].blue}
	
[menu __main __Nozzlelights __green]
type: input
enable: false
realtime: true
name: Green: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro nozzle_lights"].green}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=nozzle_lights VARIABLE=green VALUE={menu.input}
	NOZZLE_LIGHTS red={printer["gcode_macro nozzle_lights"].red} green={menu.input} blue={printer["gcode_macro nozzle_lights"].blue}
	
[menu __main __Nozzlelights __blue]
type: input
enable: false
realtime: true
name: Blue: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro nozzle_lights"].blue}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=nozzle_lights VARIABLE=blue VALUE={menu.input}
	NOZZLE_LIGHTS red={printer["gcode_macro nozzle_lights"].red} green={printer["gcode_macro nozzle_lights"].green} blue={menu.input}

[menu __main __Caselights]
type: list
enable: true
name: Fancy Lights

[menu __main __Caselights __PresetOff]
type: command
enable: true
name: All OFF
gcode:
	off_lights

[menu __main __Caselights __PresetRed]
type: command
enable: true
name: Preset Red
gcode:
	red_lights

[menu __main __Caselights __PresetOrange]
type: command
enable: true
name: Preset Orange
gcode:
	orange_lights

[menu __main __Caselights __PresetGreen]
type: command
enable: true
name: Preset Green
gcode:
	green_lights
	
[menu __main __Caselights __PresetBlue]
type: command
enable: true
name: Preset Blue
gcode:
	blue_lights

[menu __main __Caselights __PresetPurple]
type: command
enable: true
name: Preset Purple
gcode:
	purple_lights

[menu __main __Caselights __PresetWhite]
type: command
enable: true
name: Preset White
gcode:
	white_lights

[menu __main __Caselights __red]
type: input
enable: true
realtime: true
name: Red: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro lights"].red}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=lights VARIABLE=red VALUE={menu.input}
	LIGHTS red={menu.input} green={printer["gcode_macro lights"].green} blue={printer["gcode_macro lights"].blue}
	

[menu __main __Caselights __green]
type: input
enable: true
realtime: true
name: Green: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro lights"].green}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=lights VARIABLE=green VALUE={menu.input}
	LIGHTS red={printer["gcode_macro lights"].red} green={menu.input} blue={printer["gcode_macro lights"].blue}

[menu __main __Caselights __blue]
type: input
enable: true
realtime: true
name: Blue: {'%1d' % (menu.input*100)}%
input: {printer["gcode_macro lights"].blue}
input_min: 0
input_max: 1
input_step: 0.05
gcode:
	SET_GCODE_VARIABLE MACRO=lights VARIABLE=blue VALUE={menu.input}
	LIGHTS red={printer["gcode_macro lights"].red} green={printer["gcode_macro lights"].green} blue={menu.input}

[menu __main __setup __calib __mesh_calib_man]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Manual Mesh

[menu __main __setup __calib __mesh_calib_man __start]
type: command
name: Manual Mesh
gcode:
	BED_MESH_CALIBRATE METHOD=manual
	TESTZ Z=-9

[menu __main __setup __calib __mesh_calib_man __test_z]
type: input
name: Test Z: {['+.0025','+.01','+.05','+.1','+.5','+1','-1','-.5','-.1','-.05','-.01','-.0025'][menu.input|int]}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['+.0025','+.01','+.05','+.1','+.5','+1','-1','-.5','-.1','-.05','-.01','-.0025'][menu.input|int]}
    {%- endif -%}

[menu __main __setup __calib __mesh_calib_man __accept]
type: command
name: Next
gcode:
	ACCEPT
	TESTZ Z=-9

[menu __main __setup __calib __mesh_calib_man __save]
type: command
name: Save & Restart
gcode:
	SAVE_CONFIG

[menu __main __setup __calib __mesh_calib_man __abort]
type: command
name: Abort
gcode:
	ABORT
##  --------- Modifying below items ----------------------

### menu move 10mm ###
[menu __main __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 0
name: Move 10mm

[menu __main __control __move_10mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: 0
input_max: 300
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input} F3000
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: 0
input_max: 310
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input} F3000
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: 250
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input} F300
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -50
input_max: 50
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 1mm ###
[menu __main __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 1
name: Move 1mm

[menu __main __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: 0
input_max: 300
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input} F3000
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: 0
input_max: 310
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input} F3000
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: 250
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input} F300
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -50
input_max: 50
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 0.1mm ###
[menu __main __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
index: 2
name: Move 0.1mm

[menu __main __control __move_01mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: 0
input_max: 300
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input} F1500
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: 0
input_max: 310
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input} F1500
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: 250
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input} F300
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -50
input_max: 50
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis